/* global describe, it, before */

require('should');

const zapier = require('zapier-platform-core');

const App = require('../index');

const appTester = zapier.createAppTester(App);

describe('oauth2 app', () => {
  it('generates an authorize URL', () => {
    zapier.tools.env.inject();
    const bundle = {
      // In production, these will be generated by Zapier and set automatically
      inputData: {
        baseUrl: process.env.BASE_URL,
        clientId: 'xxx',
        state: '4444',
        redirect_uri: 'https://mautic.org/'
      },
    };

    return appTester(App.authentication.oauth2Config.authorizeUrl, bundle).then(
    authorizeUrl => {
      zapier.tools.env.inject();
      authorizeUrl.should.eql(
          process.env.BASE_URL+'/oauth/v2/authorize?client_id=xxx&state=4444&redirect_uri=https%3A%2F%2Fmautic.org%2F&response_type=code'
          );
        }
    );
  });

  it('fails auth on invalid url', (done) => {
    zapier.tools.env.inject();
    const bundle = {
      inputData: {
        baseUrl: 'invalid',
        clientId: 'xxx',
        state: '4444',
        redirect_uri: 'https://mautic.org/'
      },
    };

    appTester(App.authentication.test, bundle)
        .then(() => {
          response.status.should.eql(200);
        })
        .catch((error) => {
          done();
        });
  }).timeout(5000);
});
